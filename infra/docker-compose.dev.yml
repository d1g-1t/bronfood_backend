version: '3.8'

services:
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ../.env

  web:
    image: d1g1tsdocker/bronfood_backend:latest
    restart: always
    volumes:
      - ./deploy_in_container.py:/app/infra/deploy_in_container.py
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    command: python infra/deploy_in_container.py
    env_file:
      - ../.env

  nginx:
    image: nginx:1.21.3-alpine

    ports:
      - "80:80"
      - "443:443"

    volumes:
      # При сборке скопировать созданный конфиг nginx из исходной директории 
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      # - ../nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../infra/nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem

    depends_on:
      - web

volumes:
  postgres_data:
  static_value:
  media_value:

